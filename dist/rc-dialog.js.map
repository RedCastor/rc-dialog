{"version":3,"sources":["rc-dialog.js","rc-dialog-open.js","rc-dialog-controller.js","rc-dialog-service.js"],"names":["angular","module","directive","rcDialog","restrict","replace","scope","rcdTemplate","rcdTemplateUrl","rcdSize","rcdAnimation","rcdBackdrop","rcdEscClose","rcdClickClose","rcdAutoClose","rcdClass","rcdSelectedView","rcdData","link","$scope","elem","attrs","dialog","theme","isDefined","rcdOpen","template","templateUrl","size","animation","backdrop","escClose","clickClose","autoClose","class","data","dialog_api","selectedView","bind","open","controller","$location","$timeout","$log","rcDialogObj","rcDialogDataObj","rcDialogApiObj","get_selected_view","search","selected_view","isString","dialogApi","this","extend","isNumber","closeDialog","value","closeThisDialog","confirmDialog","confirm","setSelectedView","$uibModalInstance","close","$modalInstance","window","factory","$injector","modal","_open_dialog_modal","width","height","options","ariaAuto","name","disableAnimation","overlay","showClose","closeByDocument","closeByEscape","controllerAs","resolve","preCloseCallback","plain","appendClassName","modal_instance","openConfirm","then","_open_bootstrap_modal","keyboard","windowClass","backdropClass","result","dismiss","_open_foundation_modal","closeOnClick","_open_modal","get","err","error"],"mappings":"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","file":"rc-dialog.js","sourcesContent":["(function(angular){\n    'use strict';\n\n    //Create module dialog\n    var module = angular.module('rcDialog', []);\n\n})(angular);\n","(function(angular){\n    'use strict';\n\n\n    // Load module notify\n    var module = angular.module('rcDialog');\n\n\n    module.directive( 'rcdOpen', ['rcDialog', function ( rcDialog ) {\n        return {\n            restrict: \"AC\",\n            replace: false,\n            scope: {\n                rcdTemplate: '@',\n                rcdTemplateUrl: '@',\n                rcdSize: '@',\n                rcdAnimation: '=',\n                rcdBackdrop: '=',\n                rcdEscClose: '=',\n                rcdClickClose: '=',\n                rcdAutoClose: '=',\n                rcdClass: '@',\n                rcdSelectedView: '=',\n                rcdData: '=?',\n            },\n            link: function ($scope, elem, attrs) {\n\n                var dialog = {\n                    theme:      angular.isDefined(attrs.rcdOpen) ? attrs.rcdOpen : '',\n                    template:   angular.isDefined($scope.rcdTemplate) ? $scope.rcdTemplate : '',\n                    templateUrl:angular.isDefined($scope.rcdTemplateUrl) ? $scope.rcdTemplateUrl : '',\n                    size:       angular.isDefined($scope.rcdSize) ? $scope.rcdSize : 'large',\n                    animation:  angular.isDefined($scope.rcdAnimation) && $scope.rcdAnimation === 'true' ? $scope.rcdAnimation : true,\n                    backdrop:   angular.isDefined($scope.rcdBackdrop) && $scope.rcdBackdrop === 'true' ? $scope.rcdBackdrop : true,\n                    escClose:   angular.isDefined($scope.rcdEscClose) && $scope.rcdEscClose === 'true' ? $scope.rcdEscClose : true,\n                    clickClose: angular.isDefined($scope.rcdClickClose)&& $scope.rcdClickClose === 'true' ? $scope.rcdClickClose : true,\n                    autoClose:  angular.isDefined($scope.rcdAutoClose)&& $scope.rcdAutoClose ? $scope.rcdAutoClose : 0,\n                    class:      angular.isDefined($scope.rcdClass) ? $scope.rcdClass : ''\n                };\n\n                var data = angular.isDefined($scope.rcdData) ? $scope.rcdData : null;\n\n                var dialog_api = {\n                    selectedView:       angular.isDefined($scope.rcdSelectedView) ? $scope.rcdSelectedView : '',\n                };\n\n                elem.bind('click', function() {\n                    rcDialog.open(dialog, data, dialog_api);\n                });\n\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular){\n  'use strict';\n\n  var module = angular.module('rcDialog');\n\n  //ngDialog Modal Controller\n    module.controller('rcDialogCtrl', ['$location', '$timeout', '$log', 'rcDialogObj', 'rcDialogDataObj', 'rcDialogApiObj', function ( $location, $timeout, $log, rcDialogObj, rcDialogDataObj, rcDialogApiObj) {\n\n      function get_selected_view() {\n          var search = $location.search();\n          var selected_view = null;\n\n          if ( angular.isDefined(search.selectedView) ) {\n\n              if ( angular.isString(search.selectedView) ) {\n                  selected_view = search.selectedView;\n              }\n\n              $location.search('selectedView', null);\n          }\n\n          return selected_view;\n      }\n\n      var dialogApi = this;\n      var selectedView = get_selected_view();\n\n      angular.extend(this, rcDialogApiObj);\n\n      this.dialog = rcDialogObj;\n      this.data = rcDialogDataObj;\n\n      if (!angular.isDefined(this.selectedView)) {\n          this.selectedView = null;\n      }\n\n      if (selectedView) {\n          this.selectedView = selectedView;\n      }\n\n      if ( angular.isDefined(this.dialog.autoClose) && angular.isNumber(this.dialog.autoClose) && this.dialog.autoClose > 0 ) {\n          $timeout(function () {\n              dialogApi.closeDialog();\n          }, this.dialog.autoClose);\n      }\n\n      this.closeDialog = function ( value ) {\n        this.closeThisDialog( value );\n      };\n\n      this.confirmDialog = function ( value ) {\n        this.confirm( value );\n      };\n\n      this.setSelectedView = function ( value ) {\n\n          if (!this.selectedView) {\n              this.selectedView = value;\n          }\n      };\n\n  }]);\n\n\n  //UI Bootstrap Modal Controller\n    module.controller('rcDialogUibCtrl', ['$location', '$timeout', '$log', 'rcDialogObj', 'rcDialogDataObj', 'rcDialogApiObj', '$uibModalInstance', function ($location, $timeout, $log, rcDialogObj, rcDialogDataObj, rcDialogApiObj, $uibModalInstance) {\n\n      function get_selected_view() {\n          var search = $location.search();\n          var selected_view = null;\n\n          if ( angular.isDefined(search.selectedView) ) {\n\n              if ( angular.isString(search.selectedView) ) {\n                  selected_view = search.selectedView;\n              }\n\n              $location.search('selectedView', null);\n          }\n\n          return selected_view;\n      }\n\n      var dialogApi = this;\n      var selectedView = get_selected_view();\n\n      angular.extend(this, rcDialogApiObj);\n\n      this.dialog = rcDialogObj;\n      this.data = rcDialogDataObj;\n\n      if (!angular.isDefined(this.selectedView)) {\n          this.selectedView = null;\n      }\n\n      if (selectedView) {\n          this.selectedView = selectedView;\n      }\n\n      if ( angular.isDefined(this.dialog.autoClose) && angular.isNumber(this.dialog.autoClose) && this.dialog.autoClose > 0 ) {\n          $timeout(function () {\n              dialogApi.closeDialog();\n          }, this.dialog.autoClose);\n      }\n\n\n      this.closeDialog = function ( value ) {\n        $uibModalInstance.close( value );\n      };\n\n      this.confirmDialog = function ( value ) {\n        if ( angular.isString(value) ) {\n          value = 'confirm_' + value;\n        }\n        $uibModalInstance.close(value);\n      };\n\n      this.setSelectedView = function ( value ) {\n\n          if (!this.selectedView) {\n              this.selectedView = value;\n          }\n      };\n\n  }]);\n\n\n  //Foundation6 Modal Controller\n    module.controller('rcDialogFoundationCtrl', ['$location', '$timeout', '$log', 'rcDialogObj', 'rcDialogDataObj', 'rcDialogApiObj', '$modalInstance', function ($location, $timeout, $log, rcDialogObj, rcDialogDataObj, rcDialogApiObj, $modalInstance) {\n\n      function get_selected_view() {\n          var search = $location.search();\n          var selected_view = null;\n\n          if ( angular.isDefined(search.selectedView) ) {\n\n              if ( angular.isString(search.selectedView) ) {\n                  selected_view = search.selectedView;\n              }\n\n              $location.search('selectedView', null);\n          }\n\n          return selected_view;\n      }\n\n      var dialogApi = this;\n      var selectedView = get_selected_view();\n\n      angular.extend(this, rcDialogApiObj);\n\n      this.dialog = rcDialogObj;\n      this.data = rcDialogDataObj;\n\n      if (!angular.isDefined(this.selectedView)) {\n          this.selectedView = null;\n      }\n\n      if (selectedView) {\n          this.selectedView = selectedView;\n      }\n\n      if ( angular.isDefined(this.dialog.autoClose) && angular.isNumber(this.dialog.autoClose) && this.dialog.autoClose > 0 ) {\n          $timeout(function () {\n              dialogApi.closeDialog();\n          }, this.dialog.autoClose);\n      }\n\n      this.closeDialog = function ( value ) {\n        $modalInstance.close( value );\n      };\n\n      this.confirmDialog = function ( value ) {\n        if ( angular.isString(value) ) {\n          value = 'confirm_' + value;\n        }\n        $modalInstance.close(value);\n      };\n\n      this.setSelectedView = function ( value ) {\n\n          if (!this.selectedView) {\n              this.selectedView = value;\n          }\n      };\n\n  }]);\n\n})(angular, window);\n","(function(angular){\n    'use strict';\n\n\n    // Load module dialog\n    var module = angular.module('rcDialog');\n\n\n    //Media dialog\n    module.factory('rcDialog', [ '$log', '$injector', '$timeout', function ( $log, $injector, $timeout ) {\n\n            var modal = null;\n\n\n            function _open_dialog_modal( dialog, data, dialog_api ) {\n\n                var width = null;\n                var height = null;\n\n                switch (dialog.size) {\n                    case 'tiny':\n                        width = '30%';\n                        break;\n                    case 'small':\n                        width = '50%';\n                        break;\n                    case 'large':\n                        width = '90%';\n                        break;\n                    case 'full':\n                        width = '100%';\n                        height = '100vh';\n                        break;\n                    default:\n                        dialog.size = 'small';\n                        width = '50%';\n                }\n\n                var options = {\n                    width: width,\n                    height: height,\n                    ariaAuto: true,\n                    name: 'ngdialog-rc-dialog',\n                    disableAnimation: !dialog.animation,\n                    overlay: dialog.backdrop,\n                    showClose: true,\n                    closeByDocument: dialog.clickClose,\n                    closeByEscape: dialog.escClose,\n                    controllerAs: 'rcDialogApi',\n                    controller: 'rcDialogCtrl',\n                    resolve: {\n                        rcDialogObj: [ function(){\n                            return dialog;\n                        }],\n                        rcDialogDataObj: [ function(){\n                            return data;\n                        }],\n                        rcDialogApiObj: [ function(){\n                            return dialog_api;\n                        }]\n                    },\n                    preCloseCallback: function () {\n\n                    }\n                };\n\n                if ( angular.isDefined(dialog.template) && dialog.template !== '' ) {\n                    options.template = dialog.template;\n                    options.plain = true;\n                }\n                else {\n                    options.template = dialog.templateUrl;\n                    options.plain = false;\n                }\n\n                options.appendClassName = 'rc-dialog ' + dialog.class;\n\n                var modal_instance = modal.openConfirm( options );\n\n                modal_instance.then(\n                    function (close) {\n\n                    },\n                    function (confirm) {\n\n                    }\n                );\n\n            }\n\n\n            //Bootstrap Modal\n            function _open_bootstrap_modal ( dialog, data, dialog_api ) {\n\n                var options = {\n                    size: (dialog.size === 'large' || dialog.size === 'full') ? 'lg' : 'sm',\n                    animation: dialog.animation,\n                    backdrop: dialog.backdrop,\n                    keyboard: dialog.escClose,\n                    controllerAs: 'rcDialogApi',\n                    controller: 'rcDialogUibCtrl',\n                    resolve: {\n                        rcDialogObj: [ function(){\n                            return dialog;\n                        }],\n                        rcDialogDataObj: [ function(){\n                            return data;\n                        }],\n                        rcDialogApiObj: [ function(){\n                            return dialog_api;\n                        }]\n                    }\n                };\n\n                if ( angular.isDefined(dialog.template) && dialog.template !== '' ) {\n                    options.template = dialog.template;\n                }\n                else {\n                    options.templateUrl = dialog.templateUrl;\n                }\n\n\n                if (dialog.backdrop === true && dialog.clickClose === false) {\n                    options.backdrop = 'static';\n                }\n\n                options.windowClass = 'rc-dialog-uibdialog ' + dialog.class;\n                options.backdropClass = 'rc-dialog-uibdialog-backdrop ' + dialog.class;\n\n                //Modal Open\n                var modal_instance = modal.open( options );\n\n                modal_instance.result.then(\n                    function (close) {\n\n                    },\n                    function (dismiss) {\n\n                    }\n                );\n            }\n\n            //Foundation Modal\n            function _open_foundation_modal ( dialog, data, dialog_api ) {\n\n                var options = {\n                    size: dialog.size,\n                    backdrop: dialog.backdrop,\n                    closeOnClick: dialog.clickClose,\n                    keyboard: dialog.escClose,\n                    controllerAs: 'rcDialogApi',\n                    controller: 'rcDialogFoundationCtrl',\n                    resolve: {\n                        rcDialogObj: [ function(){\n                            return dialog;\n                        }],\n                        rcDialogDataObj: [ function(){\n                            return data;\n                        }],\n                        rcDialogApiObj: [ function(){\n                            return dialog_api;\n                        }]\n                    }\n                };\n\n                if ( angular.isDefined(dialog.template) && dialog.template !== '' ) {\n                    options.template = dialog.template;\n                }\n                else {\n                    options.templateUrl = dialog.templateUrl;\n                }\n\n                if (dialog.backdrop === true && dialog.clickClose === false) {\n                    options.backdrop = 'static';\n                }\n\n                options.windowClass = 'rc-dialog-zfdialog ' + dialog.class;\n\n                //Modal Open\n                var modal_instance = modal.open( options );\n\n                modal_instance.result.then(\n                    function (close) {\n\n                    },\n                    function (dismiss) {\n\n                    }\n                );\n            }\n\n\n            //Open new dialog\n            function _open_modal( dialog, data, dialog_api ) {\n\n                switch ( dialog.theme ) {\n                    case 'bootstrap':\n                        try {\n                            angular.module('ui.bootstrap');\n                            modal = $injector.get('$uibModal');\n\n                            _open_bootstrap_modal( dialog, data, dialog_api );\n                        }\n                        catch(err) {\n                            $log.error('Error to open dialog with \"ui.bootstrap\".');\n                            $log.error(err);\n                        }\n                        break;\n                    case 'foundation':\n                        try {\n                            angular.module('mm.foundation');\n                            modal = $injector.get('$modal');\n\n                            _open_foundation_modal( dialog, data, dialog_api );\n                        }\n                        catch(err) {\n                            $log.error('Error to open dialog with \"mm.foundation\".');\n                            $log.error(err);\n                        }\n                        break;\n                    default:\n                        try {\n                            angular.module('ngDialog');\n                            modal = $injector.get('ngDialog');\n\n                            _open_dialog_modal( dialog, data, dialog_api );\n                        }\n                        catch(err) {\n                            $log.error('Error to open dialog with \"ngDialog\".');\n                            $log.error(err);\n                        }\n                }\n\n            }\n\n            return {\n                open: function ( dialog, data, dialog_api ) {\n                    _open_modal( dialog, data, dialog_api );\n                }\n            };\n\n\n        }]);\n\n})(angular);\n"],"sourceRoot":"dist"}