{"version":3,"sources":["rc-dialog.js","rc-dialog-open.js","rc-dialog-controller.js","rc-dialog-service.js"],"names":["angular","module","directive","rcDialog","restrict","replace","scope","rcdTemplate","rcdTemplateUrl","rcdSize","rcdAnimation","rcdBackdrop","rcdEscClose","rcdClickClose","rcdClass","rcdData","link","$scope","elem","attrs","dialog","theme","isDefined","rcdOpen","template","templateUrl","size","animation","backdrop","escClose","clickClose","class","data","bind","open","controller","$log","rcDialogObj","rcDialogDataObj","this","closeDialog","value","closeThisDialog","confirmDialog","confirm","$uibModalInstance","close","isString","$modalInstance","window","factory","$injector","$timeout","modal","_open_dialog_modal","width","height","options","ariaAuto","name","disableAnimation","overlay","showClose","closeByDocument","closeByEscape","controllerAs","resolve","preCloseCallback","plain","appendClassName","modal_instance","openConfirm","then","_open_bootstrap_modal","keyboard","windowClass","backdropClass","result","dismiss","_open_foundation_modal","closeOnClick","_open_modal","get","err","error"],"mappings":"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","file":"rc-dialog.js","sourcesContent":["(function(angular){\n    'use strict';\n\n    //Create module dialog\n    var module = angular.module('rcDialog', []);\n\n})(angular);\n","(function(angular){\n    'use strict';\n\n\n    // Load module notify\n    var module = angular.module('rcDialog');\n\n\n    module.directive( 'rcdOpen', ['rcDialog', function ( rcDialog ) {\n        return {\n            restrict: \"AC\",\n            replace: false,\n            scope: {\n                rcdTemplate: '@',\n                rcdTemplateUrl: '@',\n                rcdSize: '@',\n                rcdAnimation: '=',\n                rcdBackdrop: '=',\n                rcdEscClose: '=',\n                rcdClickClose: '=',\n                rcdClass: '@',\n                rcdData: '=?'\n            },\n            link: function ($scope, elem, attrs) {\n\n                var dialog = {\n                    theme:      angular.isDefined(attrs.rcdOpen) ? attrs.rcdOpen : '',\n                    template:   angular.isDefined($scope.rcdTemplate) ? $scope.rcdTemplate : '',\n                    templateUrl:angular.isDefined($scope.rcdTemplateUrl) ? $scope.rcdTemplateUrl : '',\n                    size:       angular.isDefined($scope.rcdSize) ? $scope.rcdSize : 'large',\n                    animation:  angular.isDefined($scope.rcdAnimation) && $scope.rcdAnimation === 'true' ? $scope.rcdAnimation : true,\n                    backdrop:   angular.isDefined($scope.rcdBackdrop) && $scope.rcdBackdrop === 'true' ? $scope.rcdBackdrop : true,\n                    escClose:   angular.isDefined($scope.rcdEscClose) && $scope.rcdEscClose === 'true' ? $scope.rcdEscClose : true,\n                    clickClose: angular.isDefined($scope.rcdClickClose)&& $scope.rcdClickClose === 'true' ? $scope.rcdClickClose : true,\n                    class:      angular.isDefined($scope.rcdClass) ? $scope.rcdClass : ''\n                };\n\n                var data = angular.isDefined($scope.rcdData) ? $scope.rcdData : null;\n\n                elem.bind('click', function() {\n                    rcDialog.open(dialog, data);\n                });\n\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular){\n  'use strict';\n\n  var module = angular.module('rcDialog');\n\n  //ngDialog Modal Controller\n    module.controller('rcDialogCtrl', ['$log', 'rcDialogObj', 'rcDialogDataObj', function ( $log, rcDialogObj, rcDialogDataObj) {\n\n      this.dialog = rcDialogObj;\n      this.data = rcDialogDataObj;\n\n      this.closeDialog = function ( value ) {\n        this.closeThisDialog( value );\n      };\n\n      this.confirmDialog = function ( value ) {\n        this.confirm( value );\n      };\n\n  }]);\n\n\n  //UI Bootstrap Modal Controller\n    module.controller('rcDialogUibCtrl', ['$log', 'rcDialogObj', 'rcDialogDataObj', '$uibModalInstance', function ($log, rcDialogObj, rcDialogDataObj, $uibModalInstance) {\n\n      this.dialog = rcDialogObj;\n      this.data = rcDialogDataObj;\n\n      this.closeDialog = function ( value ) {\n        $uibModalInstance.close( value );\n      };\n\n      this.confirmDialog = function ( value ) {\n        if ( angular.isString(value) ) {\n          value = 'confirm_' + value;\n        }\n        $uibModalInstance.close(value);\n      };\n\n  }]);\n\n\n  //Foundation6 Modal Controller\n    module.controller('rcDialogFoundationCtrl', ['$log', 'rcDialogObj', 'rcDialogDataObj', '$modalInstance', function ($log, rcDialogObj, rcDialogDataObj, $modalInstance) {\n\n      this.dialog = rcDialogObj;\n      this.data = rcDialogDataObj;\n\n      this.closeDialog = function ( value ) {\n        $modalInstance.close( value );\n      };\n\n      this.confirmDialog = function ( value ) {\n        if ( angular.isString(value) ) {\n          value = 'confirm_' + value;\n        }\n        $modalInstance.close(value);\n      };\n\n  }]);\n\n})(angular, window);\n","(function(angular){\n    'use strict';\n\n\n    // Load module dialog\n    var module = angular.module('rcDialog');\n\n\n    //Media dialog\n    module.factory('rcDialog', [ '$log', '$injector', '$timeout', function ( $log, $injector, $timeout ) {\n\n            var modal = null;\n\n\n            function _open_dialog_modal( dialog, data ) {\n\n                var width = null;\n                var height = null;\n\n                switch (dialog.size) {\n                    case 'tiny':\n                        width = '30%';\n                        break;\n                    case 'small':\n                        width = '50%';\n                        break;\n                    case 'large':\n                        width = '90%';\n                        break;\n                    case 'full':\n                        width = '100%';\n                        height = '100vh';\n                        break;\n                    default:\n                        dialog.size = 'small';\n                        width = '50%';\n                }\n\n                var options = {\n                    width: width,\n                    height: height,\n                    ariaAuto: true,\n                    name: 'ngdialog-rc-dialog',\n                    disableAnimation: !dialog.animation,\n                    overlay: dialog.backdrop,\n                    showClose: true,\n                    closeByDocument: dialog.clickClose,\n                    closeByEscape: dialog.escClose,\n                    controllerAs: 'rcDialogApi',\n                    controller: 'rcDialogCtrl',\n                    resolve: {\n                        rcDialogObj: [ function(){\n                            return dialog;\n                        }],\n                        rcDialogDataObj: [ function(){\n                            return data;\n                        }]\n\n                    },\n                    preCloseCallback: function () {\n\n                    }\n                };\n\n                if ( angular.isDefined(dialog.template) && dialog.template !== '' ) {\n                    options.template = dialog.template;\n                    options.plain = true;\n                }\n                else {\n                    options.template = dialog.templateUrl;\n                    options.plain = false;\n                }\n\n                options.appendClassName = 'rc-dialog ' + dialog.class;\n\n                var modal_instance = modal.openConfirm( options );\n\n                modal_instance.then(\n                    function (close) {\n\n                    },\n                    function (confirm) {\n\n                    }\n                );\n\n            }\n\n\n            //Bootstrap Modal\n            function _open_bootstrap_modal ( dialog, data ) {\n\n                var options = {\n                    size: (dialog.size === 'large' || dialog.size === 'full') ? 'lg' : 'sm',\n                    animation: dialog.animation,\n                    backdrop: dialog.backdrop,\n                    keyboard: dialog.escClose,\n                    controllerAs: 'rcDialogApi',\n                    controller: 'rcDialogUibCtrl',\n                    resolve: {\n                        rcDialogObj: [ function(){\n                            return dialog;\n                        }],\n                        rcDialogDataObj: [ function(){\n                            return data;\n                        }]\n                    }\n                };\n\n                if ( angular.isDefined(dialog.template) && dialog.template !== '' ) {\n                    options.template = dialog.template;\n                }\n                else {\n                    options.templateUrl = dialog.templateUrl;\n                }\n\n\n                if (dialog.backdrop === true && dialog.clickClose === false) {\n                    options.backdrop = 'static';\n                }\n\n                options.windowClass = 'rc-dialog-uibdialog ' + dialog.class;\n                options.backdropClass = 'rc-dialog-uibdialog-backdrop ' + dialog.class;\n\n                //Modal Open\n                var modal_instance = modal.open( options );\n\n                modal_instance.result.then(\n                    function (close) {\n\n                    },\n                    function (dismiss) {\n\n                    }\n                );\n            }\n\n            //Foundation Modal\n            function _open_foundation_modal ( dialog, data ) {\n\n                var options = {\n                    size: dialog.size,\n                    backdrop: dialog.backdrop,\n                    closeOnClick: dialog.clickClose,\n                    keyboard: dialog.escClose,\n                    controllerAs: 'rcDialogApi',\n                    controller: 'rcDialogFoundationCtrl',\n                    resolve: {\n                        rcDialogObj: [ function(){\n                            return dialog;\n                        }],\n                        rcDialogDataObj: [ function(){\n                            return data;\n                        }]\n                    }\n                };\n\n                if ( angular.isDefined(dialog.template) && dialog.template !== '' ) {\n                    options.template = dialog.template;\n                }\n                else {\n                    options.templateUrl = dialog.templateUrl;\n                }\n\n                if (dialog.backdrop === true && dialog.clickClose === false) {\n                    options.backdrop = 'static';\n                }\n\n                options.windowClass = 'rc-dialog-zfdialog ' + dialog.class;\n\n                //Modal Open\n                var modal_instance = modal.open( options );\n\n                modal_instance.result.then(\n                    function (close) {\n\n                    },\n                    function (dismiss) {\n\n                    }\n                );\n            }\n\n\n            //Open new dialog\n            function _open_modal( dialog, data ) {\n\n                switch ( dialog.theme ) {\n                    case 'bootstrap':\n                        try {\n                            angular.module('ui.bootstrap');\n                            modal = $injector.get('$uibModal');\n\n                            _open_bootstrap_modal( dialog, data );\n                        }\n                        catch(err) {\n                            $log.error('Error to open dialog with \"ui.bootstrap\".');\n                            $log.error(err);\n                        }\n                        break;\n                    case 'foundation':\n                        try {\n                            angular.module('mm.foundation');\n                            modal = $injector.get('$modal');\n\n                            _open_foundation_modal( dialog, data );\n                        }\n                        catch(err) {\n                            $log.error('Error to open dialog with \"mm.foundation\".');\n                            $log.error(err);\n                        }\n                        break;\n                    default:\n                        try {\n                            angular.module('ngDialog');\n                            modal = $injector.get('ngDialog');\n\n                            _open_dialog_modal( dialog, data );\n                        }\n                        catch(err) {\n                            $log.error('Error to open dialog with \"ngDialog\".');\n                            $log.error(err);\n                        }\n                }\n\n            }\n\n            return {\n                open: function ( dialog, data ) {\n                    _open_modal( dialog, data );\n                }\n            };\n\n\n        }]);\n\n})(angular);\n"],"sourceRoot":"dist"}